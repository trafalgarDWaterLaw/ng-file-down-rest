{"version":3,"sources":["ng://ng-file-down-rest/lib/ng-file-down-rest.service.ts","ng://ng-file-down-rest/lib/ng-file-down-rest.component.ts","ng://ng-file-down-rest/lib/ng-file-down-rest.module.ts"],"names":["NgFileDownRestService","Injectable","args","providedIn","NgFileDownRestComponent","document","this","methodType","tagName","response","EventEmitter","blobUrl","message","success","prototype","ngOnInit","ngAfterViewInit","styleCss","anchorElement","nativeElement","style","color","handleDownload","event","preventDefault","urlPath","makeApiCall","emit","xhr","XMLHttpRequest","open","headerObject","header","JSON","parse","property","setRequestHeader","responseType","that","onreadystatechange","readyState","contentType","getResponseHeader","blob","Blob","type","makeAmends","dto","params","send","window","URL","createObjectURL","ngOnDestroy","revokeObjectURL","Component","selector","template","Inject","DOCUMENT","Input","Output","ViewChild","static","NgFileDownRestModule","NgModule","declarations","imports","exports"],"mappings":"sVAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAHd,GCAAC,EAAA,WAwBE,SAAAA,EAAsCC,GAAAC,KAAAD,SAAAA,EAf7BC,KAAAC,WAAqB,MAGrBD,KAAAE,QAAkB,WAEjBF,KAAAG,SAAW,IAAIC,EAAAA,aAEzBJ,KAAAK,QAAU,GACVL,KAAAM,QAAU,CAACC,SAAW,GA4ExB,OAzEET,EAAAU,UAAAC,SAAA,aAMAX,EAAAU,UAAAE,gBAAA,WACOV,KAAKW,SAGRX,KAAKY,cAAcC,cAAcC,MAAQd,KAAKW,SAF9CX,KAAKY,cAAcC,cAAcC,MAAMC,MAAQ,WAKnDjB,EAAAU,UAAAQ,eAAA,SAAeC,GACW,SAApBjB,KAAKC,YACPgB,EAAMC,iBACFlB,KAAKmB,SACPnB,KAAKoB,eAGPpB,KAAKG,SAASkB,KAAKrB,KAAKM,UAI5BR,EAAAU,UAAAY,YAAA,eACME,EAAM,IAAIC,eACdD,EAAIE,KAAK,OAAQxB,KAAKmB,aAClBM,EAAe,GAInB,GAHIzB,KAAK0B,SACPD,EAAeE,KAAKC,MAAM5B,KAAK0B,SAE7BD,EACF,IAAK,IAAMI,KAAYJ,EACrBH,EAAIQ,iBAAiB,GAAGD,EAAY,GAAGJ,EAAaI,SAGtDP,EAAIQ,iBAAiB,eAAgB,oBACrCR,EAAIQ,iBAAiB,gBAAiB,YAExCR,EAAIS,aAAe,WACfC,EAAOhC,KACXsB,EAAIW,mBAAkB,WACpB,GAAwB,IAApBjC,KAAKkC,WAAkB,KACrBC,EAAcb,EAAIc,kBAAkB,gBAAkBd,EAAIc,kBAAkB,gBAAkB,aAClG,GAAID,EAAa,KACXE,EAAO,IAAIC,KAAK,CAACtC,KAAKG,UAAW,CAACoC,KAAMJ,IAC5CH,EAAKQ,WAAWH,EAAML,UAIxBS,EAAMzC,KAAK0C,OACXD,GACFnB,EAAIqB,KAAKF,IAIb3C,EAAAU,UAAAgC,WAAA,SAAWH,EAAML,GACfA,EAAK3B,QAAUuC,OAAOC,IAAIC,gBAAgBT,GAC1CO,OAAOpB,KAAKQ,EAAK3B,SACjBL,KAAKG,SAASkB,KAAKrB,KAAKM,UAG1BR,EAAAU,UAAAuC,YAAA,WACEH,OAAOC,IAAIG,gBAAgBhD,KAAKK,SAChCL,KAAKmB,QAAU,GACfnB,KAAKC,WAAa,MAClBD,KAAK0C,OAAS,GACd1C,KAAK0B,OAAS,GACd1B,KAAKE,QAAU,WACfF,KAAKW,SAAW,GAChBX,KAAKK,QAAU,GACfL,KAAKM,QAAU,CAACC,SAAW,wBAzF9B0C,EAAAA,UAASrD,KAAA,CAAC,CACTsD,SAAU,oBACVC,SAAA,kKAoBaC,EAAAA,OAAMxD,KAAA,CAACyD,EAAAA,gDAhBnBC,EAAAA,0BACAA,EAAAA,sBACAA,EAAAA,sBACAA,EAAAA,uBACAA,EAAAA,wBACAA,EAAAA,wBACAC,EAAAA,8BACAC,EAAAA,UAAS5D,KAAA,CAAC,iBAAkB,CAAC6D,QAAQ,OA8ExC3D,EA7FA,GCAA,IAAA4D,EAAA,WAKA,SAAAA,KAMoC,2BANnCC,EAAAA,SAAQ/D,KAAA,CAAC,CACRgE,aAAc,CAAC9D,GACf+D,QAAS,GAETC,QAAS,CAAChE,OAEwB4D,EAXpC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgFileDownRestService {\n\n  constructor() { }\n}\n","import { Component, OnInit, AfterViewInit, OnDestroy, Input, EventEmitter, Output, ElementRef, ViewChild, Inject} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n@Component({\n  selector: 'ng-file-down-rest',\n  templateUrl: './ng-file-down-rest.component.html',\n  styleUrls: []\n})\nexport class NgFileDownRestComponent implements OnInit, AfterViewInit, OnDestroy  {\n  @Input() urlPath: string;\n  @Input() methodType: string = 'GET';\n  @Input() params: any;\n  @Input() header: any;\n  @Input() tagName: string = 'Download';\n  @Input() styleCss: string;\n  @Output() response = new EventEmitter<any>();\n  @ViewChild('ngFileLinkRest', {static: false}) anchorElement: ElementRef;\n  blobUrl = '';\n  message = {\"success\": true};\n\n\n  ngOnInit() {\n\n  }\n\n  constructor(@Inject(DOCUMENT) private document) { }\n\n  ngAfterViewInit() {\n    if (!this.styleCss) {\n      this.anchorElement.nativeElement.style.color = '#6475FF';\n    } else {\n      this.anchorElement.nativeElement.style = this.styleCss;\n    }\n  }\n  handleDownload(event) {\n    if (this.methodType === \"POST\") {\n      event.preventDefault();\n      if (this.urlPath) {\n        this.makeApiCall();\n      }\n    } else {\n      this.response.emit(this.message);\n    }\n  }\n\n  makeApiCall() {\n    let xhr = new XMLHttpRequest();\n    xhr.open('POST', this.urlPath);\n    let headerObject = {}\n    if (this.header) {\n      headerObject = JSON.parse(this.header);\n    }\n    if (headerObject) {\n      for (const property in headerObject) {\n        xhr.setRequestHeader(`${property}`, `${headerObject[property]}`);\n      }\n    } else {\n      xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n      xhr.setRequestHeader(\"cache-control\", \"no-cache\");\n    }\n    xhr.responseType = 'blob';\n    let that = this;\n    xhr.onreadystatechange = function() {\n      if (this.readyState === 4) {\n        let contentType = xhr.getResponseHeader(\"Content-Type\") ? xhr.getResponseHeader(\"Content-Type\") : 'text/plain';\n        if (contentType) {\n          let blob = new Blob([this.response], {type: contentType});\n          that.makeAmends(blob, that);\n        }\n      }\n    }\n    let dto = this.params;\n    if (dto) {\n      xhr.send(dto);\n    }\n  }\n\n  makeAmends(blob, that) {\n    that.blobUrl = window.URL.createObjectURL(blob);\n    window.open(that.blobUrl);\n    this.response.emit(this.message);\n  }\n\n  ngOnDestroy() {\n    window.URL.revokeObjectURL(this.blobUrl);\n    this.urlPath = '';\n    this.methodType = 'GET';\n    this.params = '';\n    this.header = {};\n    this.tagName = 'Download';\n    this.styleCss = '';\n    this.blobUrl = '';\n    this.message = {\"success\": true};\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgFileDownRestComponent } from './ng-file-down-rest.component';\n\n\n\n@NgModule({\n  declarations: [NgFileDownRestComponent],\n  imports: [\n  ],\n  exports: [NgFileDownRestComponent]\n})\nexport class NgFileDownRestModule { }\n"]}